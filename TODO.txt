
09/06/2024 Thorough Test for all datasets in retrieve AR must be done!
01/10/2024 (1) mlxtend implementations must be integrated in webApriori
29/09/2024 (2) participating items must be handled in mlxtend implementation after (1)
29/09/2024 thorough tests must be done to determine if the correct AR has been mined according to confidence and lift thresholds
29/09/2024 Autodetect, Info, Filter Participating items must be managed async.
02/10/2024 Cannot Autodetect quote ' in FPGrowthSample.txt 
04/10/2024 After successful save of the items filtering show toast (3 seconds) instead of modal
15/10/2024 Improve/make smooth uploading dataset procedure
16/10/2024 In Dataset Type 1 In info (Top 1,2,3 Value %) is computed including NaN Values. H-mineSample.txt Top1 Value (d) 4/24-->16.7% it should 4/21 19%
15/10/2024 IMPORTANT! Check Autodetect, Info For all datasetTypes because many changes occured. 
16/10/2024 Filter participating items must be updated when declaring new datasetType e.g. 0data_balita.csv and 4-NOA declared.
    ln 1168 retrieveParticipatingItems
    ln 1560 datasetTypeChanged



06/10/2024 IMPORTANT! Top K implementation in python

03/12/2024 Check NegFin & TKFIM for Top K=1000 (0.886107634543179) one ouputs 1012 and the other 1009

01/11/2024 In Borgelt eClat Try if helps memory and CPU if items kept in dictionary as numbers instead texts.




python (must research...)
tuple of dictionaries     ({'name': 'e', 'count': 2}, {'name': 'd', 'count': 3}, {'name': 'c', 'count': 3}, {'name': 'b', 'count': 4}, {'name': 'a', 'count': 4})
faster than dictionary.   [{'name': 'e', 'count': 2}, {'name': 'd', 'count': 3}, {'name': 'c', 'count': 3}, {'name': 'b', 'count': 4}, {'name': 'a', 'count': 4}] 


For Research: Transform input data to integer via dictionary (e.g '{potatoes: 1, sugar:2 etc.) is done in original negFIN 
Research use of FPGrowth_strings SPMF

######################
negFIN python (negFINTest.py)
    > The order of bitmap_code is opposite of that described in paper.. 
      e.g. item e of the first transaction b,d,e in paper is 01011 and in python code is 11010
                                                             abcde                       edcba

    +1. items names subtistuted by index (int) when running the algorithms
    +2. Seems extremely fast implementation
    +3. implements bitarray (String of bits with the same functioning as in C++ bitwise operators) with no limitation to 1-item frequent itemsets
negFIN_Mall1
    +1. Memory Save mode created. When memorySave=False algorithm is slightly faster and slightly more memory is consumed.
    +2  Improved FI writing to a file. First a dictionary is created and then is written in json format.

    -1 slightly slower from the original C++ implementation

######################
negFIN original C++ (folder negFIN_C++\compile.bat & runtest.bat after filled with all the experiments)
    +1 May be the fastest implementation overall

    -1 Works up to 128 different 1-item frequent itemsets


######################
PAMI: implements in python:
    - Apriori_TID_bitset
    - Eclat_bitset
    - FPGrowth
    - Eclat
    - Apriori
    - DEclat (diffsets Eclat)

    +1. finding min support by counting transactions by transforming 1-MBL transactional data to tabular database.
        It sorts items in descending order by the length of transactions that they belong 
        sample:
        {
            (a,)=[1,3,4,5],
            (b,)=[1,3,5],
            (f,)=[1,4,6],
            (d,)=[1,4],
            ....
        }
    +2 Time is measured without the FIM export

######################
SPMF (java): 
    - Apriori
    - AprioriTID bitset
    - Eclat 
    - Eclat_bitset
    - DEclat (diffsets Eclat)
    - DEclat_bitset
    - FPGrowth
    - FIN
    - DFIN
    - negFIN


    +1 Quick implementation in general and surely faster than python.

    -1. Takes as seperator only the {space}
    -2. Takes as items only integers

######################
mlxtend py:
    - Apriori
    - H-mine
    - FPGrowth

    +1 Time is measured without the FIM export

######################
negFIN Aryabarzan+Mall Contribution Language:python
    +1 Quick
    +2 Mall Contribution (Memory saver flag to allow run faster)
    +3 Time is measured without thw FIM export

    -1 At the original version, time and memory include FIM export which is integraded in the algorithm
            (TODO: Can it be seperated?)

######################
negFIN Aryabarzan+Mall Contribution Language:C++ 
    +1 The QUICKEST!
    +2 Mall Contribution: Time elapsed, menory consuption, Json output of the statistics
    +3 Time is measured without thw FIM export

######################
Borgelt Eclat py:
    -1 Uses in the algorithm the names of the items (string) slowing the whole process

Borgelt C++:

    ? quick?
    ? which algorithms?

######################
Goethals C++:
    - Eclat 
    - FpGrowth
    Contribution:
    +1 minSup transformed to be used either as actual number or as a percentage in the range [0...1]

    usage:
    D:\xampp\htdocs\WebApriori\Python\datasets\Experiments\goethal_C++\eclat\runTest.bat
    D:\xampp\htdocs\WebApriori\Python\datasets\Experiments\goethal_C++\fpgrowth\runTest.bat


######################
Goethals Eclat py: http://adrem.uantwerpen.be/~goethals/software/files/eclat.py
    +1 Very simple implementation

    -1 Uses in the algorithm the names of the items (string) slowing the whole process

    Contributions: goethal_Eclat_Mall.py
    1. Use with dataset with any seperator
    2. improved precition in computing absolute minSup with math.ceil function
    3. Improved reading of the transaction dataset (manipulation of special characters such as line feed '\n')
    4. Code for computing running time nad memory consumption.

######################
TKFIM (Top-K)
    +1 Seems quickest from its precedetors

    -1 Inability to manipulate all transactional datasets becuase of pandas dataframe (Can't handle efficiently 1-MBL Type datasets)
    -2 It does not find exactly the first Top-K. It finds the first Top-K occurenses of different support itemsets
    -3 In some occasions it cannot find all the frequent itemsets (Corrected in Contribution +5)

    chess  100 -> found 182? - > Total Execution Time: 14.965497016906738 Seconds

    Contributions: _Mall.py
    +1 manipulate all transactional datasets (1-MBL) with a lists of lists structure instead of dataframe
    +2 class wrapping of the algorithm from better manipulation and integreation
    +3 quickest read of the dataset file
    +4 better computation of the statistics (time and memory consuption)
    +5 Transformed to find the exact Top-K itemsets plus all itemsets that have support equal to minSup.
    +6 extensive improvements in all the code segments of the algorithm improving mining time to less than half (50%)
    +7 Found a bug on the algorithm that allowed the loss of some FIs
    +8 Use of a quick heap structure to maintain the Top-K support values with insert and getMinSup functions DIRECTLY (reduced about a magnitude the mining time)
    +9 use of intersection instead of diffSet (Quicker in most cases) (kept both ways with parameter) Could it be automatic the alteration between?
       chess  100 ->   14,9s       original implementation
                  ->    0,055s 30MB with diffset
                  ->    0,045s 28MB with intersection, bitSet
                  ->    0.101s 36MB with intersection
                  ->    0,6s   84MB with intersection first stage
             1000 -> 2024,6        original implementation
                  ->    0,530s  56MB with diffset
                  ->    0,150s  31MB with intersection, bitSet
                  ->    1,210s 103MB with intersection
                  ->    8,000s 151MB with intersection first stage
                  ->   30,500s 163MB with "original" diffsets
            10000 -> 
                  ->   17,260s 357MB with diffset
                  ->   12,920s  57MB with intersection, bitSet
                  ->   24,620s 739MB with intersection
                  
    +10 (5% faster) Collect only the first topK itemsets of listOFKeys. the rest are discarded.
    +11 Improved diffSet computation
    +12 Use tuple instead of string for self.data dictionary (gained speed and memory consumption)
    +13 TODO bitset improvement for TopK 1-items

        scimago for checking 

        References:
        Fast Vertical Mining Using Diffsets


Done 01/11/2024 21/10/2024 Dataset ARM features collection


T10I4D100K.csv
T10: This represents the average transaction length (the number of items per transaction). In this case, each transaction contains, on average, 10 items.
I4: This represents the average size of the frequent itemsets (the number of items that frequently appear together). In this case, the frequent itemsets tend to have about 4 items on average.
D100K: This represents the number of transactions in the dataset. Specifically, it refers to 100,000 transactions (D100K = 100K = 100,000).




Rapidminer, Weka, SPSS, Knime, Orange, Spark Lib
such as Julia [2], AUTO-SKLEARN [3], Chameleon [4], ML-Plan [5].

12/07/2024 Real multithread environment
   Works in Main01W. But print and returns must be checked. Also the other programs must be transformed to run from waitress and flask
16/06/2024 Upload AutoML WebApriori to NIREAS


ReView - Survey

- Review of algorithms
- Review of libraries
- Contributions
- Experimental study
    - datasets






Must be integraded in my association_rules.py

DONE - V01.00.00 16/10/2024 04/10/2024 Number of Transactions, Number of items, sparsity index must be saved and shown
DONE - V01.00.00 15/10/2024 29/09/2024 participating items must be used or corrected for dataset types 1,2 in native implementation of apriori. excludedItems is used instead
DONE - V01.00.00 15/10/2024 15/10/2024 participatingItems Wiped from everywhere in code. excludedItems is used instead
DONE - V01.00.00 15/10/2024 13/10/2024 In datasetType 2, if group Item or Value Item changed, info is not updated...
DONE - V01.00.00 04/10/2024 29/09/2024 participating items must be used or corrected in all dataset types in native implementation of apriori
DONE - V01.00.00 04/10/2024 02/10/2024 Integrade mlxtend source files in my repository because of the changes I have made.
DONE - V01.00.00 02/10/2024 30/09/2024 1-char columns not working right with NaN's > datasetTypeDetection.py ln245
DONE - V01.00.00 01/10/2024 29/09/2024 Info must detect manual changes made by the user in `hasHeader, delimiter, Dataset type` before `Retrieve AR` is made
DONE - V01.00.00 01/10/2024 30/09/2024 If user changes datasetType, then it always updates. It should only if changed it now ln:229 datasetAttrAutoDetectMetadata.py
DONE - V01.00.00 04/09/2024 10/06/2024 AutoML type 2-INV Dataset type for finding the grouping and item column - Tested in all INV Type datasets. High accuracy achieved
DONE - V01.00.00 31/08/2024 23/08/2024 Thorough Test for all datasets in 'filter participating items' must be done! Done partially in huge item datasets
DONE - V01.00.00 31/08/2024 09/06/2024 Thorough Test for all datasets in info        must be done!
           DONE 02W_amazon.csv probles with quotechar detected.
           DONE 0Fake04_1.csv Cannot read properties of null (reading 'delimiter')
           DONE python datasetDescribe.py "79d1727987f200802593e3599119c966" "0Raisin_Dataset.arff" "10" "15" "1"
           DONE 0Video_Games_Sales_as_at_22_Dec_2016 Cannot read properties of null (reading 'delimiter')
           DONE 0NY-House-Dataset wrong classification 1 instead of 0
           DONE python datasetDescribe.py "79d1727987f200802593e3599119c966" "0_Dry_Bean_Dataset.arff" "10" "15" "1"
           DONE 0academic_detail Wrong separator '/' instead of ','
           DONE 0fakeNews.csv Cannot read properties of null (reading 'delimiter')
           DONE 0field_of_study.csv Wrong separator ' ' instead of ','
           DONE OK... Can work as 4 0fish_catches.csv wrong classification 4 instead of 0
           DONE python DatasetAttrAutoDetect.py "79d1727987f200802593e3599119c966" "0global_education_data.csv" "-1" "1" "1" 201Invalid parameters! Please check
           DONE 3Bakery Sales.csv Cannot read properties of null (reading 'delimiter') value nan added in dropna values
           DONE 4horse.csv
DONE - V01.00.00 23/08/2024 23/08/2024 AutoML type 3-SI  Dataset type for finding the absent item column in case user changed manually dataset type
DONE - V01.00.00 23/08/2024 16/08/2024 Apriori engine must filter participating items (Only in LHS, only in RHS, excluded)
DONE - V01.00.00 23/08/2024 16/08/2024 Save filter participating items Search.html Ln:1290
DONE - V01.00.00 23/08/2024 12/06/2024 Extra parameters / item names field must be initialized and beautified!
DONE - V01.00.00 23/08/2024 12/02/2024 Apriori Engine Main05.py won't work with many arguments (>700) e.g 3_L-0012_2023.csv. Should be checked After (1)
DONE - V01.00.00 23/08/2024 22/08/2024 # must put in dataset table showing the row id.
DONE - V01.00.00 23/08/2024 21/01/2024 Columns/items participating in LHS,RHS,Itemsets in 1,2,3,4 dataset types
DONE - V01.00.00 23/08/2024 22/08/2024 InitializeDatasetType2 ln 830 must be corrected
DONE - V01.00.00 16/08/2024 15/08/2024 In batch participating items, and input is needed in order to declare value only in that items.
DONE - V01.00.00 15/08/2024 24/06/2024 Search.Html Ln:192. The existence of  participating items must not be mandatory. Only for filter purposes. 
DONE - V01.00.00 15/08/2024 12/08/2024 Filter participating items. Must working before running arm when choosing Group and value Argument.               
DONE - V01.00.00 12/07/2024 19/06/2024 type 3-SI  Dataset type absent item manipulation
DONE - V01.00.00 12/07/2024 24/06/2024 RetrieveRules.php ln 153 --> Creation / append to metadatafile.
DONE - V01.00.00 11/07/2024 24/06/2024 Won't show last retrieved ARM fot type 2 datasets e.g 2sales.csv. Fixed in retrieveInputParameters.php Ln 67
DONE - V01.00.00 08/07/2024 24/06/2024 2Sales.csv wrong delimiter detection : instead of ;. MyCsv.py _guess_quote_and_delimiter Procedure transformed for better quote detection in not well weighted datasets. quote matches must be at least the 90% of the number of sample rows.
DONE - V01.00.00 23/06/2024 20/06/2024 Put an X button in Dataset information container
DONE - V01.00.00 17/06/2024 09/12/2023 AutoML type 4-NOA Extra parameters (e.g. name of the dataset's columns)
DONE - V01.00.00 17/06/2024 16/06/2024 3_L-0010_2021.metadata Check why Top 1 Value is 0.0 and not 0
DONE - V01.00.00 16/06/2024 09/12/2023 AutoML type 3-SI Extra parameters / item names bring automatically the absent item 
DONE - V01.00.00 14/06/2024 03/02/2024 arff files manipulation in webApriori
DONE - V01.00.00 12/06/2024 21/04/2024 3 Type Datasets seems not to produce association rules if the absent item is None. Tested and working Fine! a2100.csv & a2100withNaN.csv
DONE - V01.00.00 12/06/2024 12/06/2024 If UTF-8 with BOM, erase BOM! (e.g. 3bakery_Sales.csv). Done with --> encoding='utf-8-sig'
DONE - V01.00.00 12/06/2024 21/04/2024 2Sample - Superstore Could not retrieve any record from the dataset. IT SHOULD. In some lines it had +1 column 22 instead 21
DONE - V01.00.00 10/06/2024 03/06/2024 Dataset description > Dataset Type 1 manipulation
DONE - V01.00.00 09/06/2024 07/06/2024 Dataset description > User decition the rows and columns
DONE - V01.00.00 07/06/2024 17/12/2023 Dataset description section must be created (Shape, describe, 10 lines sample)
DONE - V01.00.00 07/06/2024 05/06/2024 Tooltip on Dataset features
DONE - V01.00.00 06/06/2024 03/06/2024 Dataset features extraction show in HTML 
DONE - V01.00.00 31/04/2023 31/03/2024 correct the html files (frontend) to conform to new rules (datasetType, datasetSep etc)
DONE - V01.00.00 25/04/2024 20/04/2024 3 datasetType creation from 2 (test datasets) and final percentages of ML (all algorithms) via test data
DONE - V01.00.00 13/04/2024 The engine does not keep user dataset feature preferences in public datasets.
DONE - V01.00.00 15/04/2024 2SuperStoreOrders.csv removed from test data due to malformed data
DONE - V01.00.00 20/04/2024 17/04/2024 2Sample - Superstore It is detected as 1? but it is clearly datasetType:2. Finally the dataset had commas in a column, making it inconsistent. The solution was to erase the commas inside the text of the column. 
DONE - V01.00.00 17/04/2024 When the the most frequent value in a dataframe is NaN(nan) then the dataset is more likely to be of Type 3 (sparse) and NaN value is changed to 0 (example: Bakery Sales.csv) 
DONE - V01.00.00 10/04/2024 AutoML dataset type must be utilized
DONE - V01.00.00 10/04/2024 Correct the texts in the application (AutoML)
DONE - V01.00.00 10/04/2024 jquery updated to latest version 3.7.1
DONE - V01.07.00 27/01/2024 Bootstrap updated from V4.3.1 to V5.3.3
DONE - V01.07.00 16/02/2024 30/01/2024 Dataset attributes must be collected (120/120)
DONE - V01.07.00 03/02/2024 30/01/2024 Check Integer Columns frequency is not working smoothly
DONE - V01.07.00 03/02/2024 03/02/2024 arff files manipulation
DONE - V01.07.00 30/01/2024 27/01/2024 Absent item auto detection in 3rd type dataset
DONE - V01.07.00 27/01/2024 06/01/2024 In type 4 datasets there is the necessity to transform columns putting as a prefix the column name 
                            in order to distinct same values from other columns (e.g mammographic.dat, car.dat)
                            Auto fill extra parameters with header columns if header exists
DONE - V01.07.00 27/01/2024 26/01/2024 search.html Ln 634 (from .metadata) is running after 734 (Autodetect.)
DONE - V01.07.00 25/12/2023 Number decimal separator must be determined
DONE - V01.07.00 16/12/2023 09/12/2023 delimiter and header detection must be included in webapriori
DONE - V01.07.00 16/12/2023 13/12/2023 manual delimiter and header detection must be saved in .metadata.
DONE - V01.07.00 13/12/2023 28/11/2023 python executable is declared in config.php as PYTHON
DONE - V01.06.00 09/12/2023 03/12/2023 delimiter and header determination documentation needed.
DONE - V01.06.00 09/12/2023 28/11/2023 determine if dataset has header or not.
DONE - V01.06.00 28/11/2023 26/11/2023 Public dataset downloading is not working




WEB API    
- Fully asychronous call for ARM / results in user interface
DONE - 10/02/2020 V01.05.00 Redundant rules elimination (3 cases) implemented
DONE - 21/01/2020 V01.04.00 Use of value instead of placeholder in basic parameters
DONE - 16/01/2020 V01.03.00 Correct spelling and spelling in all parts of the application
DONE - 22/12/2019 V01.02.00 First complete edition
DONE - 22/12/2019 V01.02.00 page for giving priviledges for public queries
DONE - 19/12/2019 V01.00.00 WebAPI -> Run public queries
DONE - 19/12/2019 V01.00.00 Check Dataset deletion Private & public
DONE - 15/12/2019 V00.00.05 WebAPI -> Retrieve association rules in JSON format
DONE = 15/12/2019 V00.00.05 Στην σελίδα WebAPI αν δεν έχει APIKey ή ημερομηνία λήξης χτυπάει μηνυμα
DONE - 15/12/2019 V00.00.05 Οδηγίες για τους τύπους των dataset στα web calls
DONE - 15/12/2019 V00.00.05 το εξ'ορισμου 2 στο max items να γινει 4
DONE - 15/12/2019 V00.00.05 Create user with nireas smtp
DONE - 15/12/2019 V00.00.05 Στα datasets να εχει παραδείγματα ιδιως στις παραμετρους
DONE - 13/12/2019 V00.00.04 WebAPI -> Request association rules
DONE - 11/12/2019 V00.00.03 WebAPI -> Delete dataset request
DONE - 09/12/2019 V00.00.02 WebAPI -> show Dataset request
DONE - 06/12/2019 V00.00.01 WebAPI -> Upload dataset function
DONE - 01/12/2019 V00.00.00 WebAPI -> Valid for 30 days info
DONE - 29/11/2019 Delete user in profile
DONE - 29/11/2019 Google Analytics
DONE - 27/11/2019 Download dataset
DONE - 26/11/2019 When uploading file, updating image must be shon


NIREAS ISSUES

DONE - 30/11/2019 Can't upload file more than 8M
DONE - 30/11/2019Capcha check functions
DONE - 30/11/2019Check Delete user in profile
NOT DONE - 30/11/2019 htaccess to calls (Need adjustment with root privileges for use in Debian)




All Frequent Itemsets: Apriori, FpGrowth, dclat, H-Mine, LCM, Fin, LCMFreq
Top K AR: TopKRules, TNR (without redundancy)

cbratsas@ihu.gr, konsmall@iee.ihu.gr, stoug@ihu.gr, dad@ihu.gr, asidirop@ihu.gr, kdiamant@ihu.gr

.metadatafile Updated in 
1) datasetDescribe.php
2) retrieveRulesW.php
3) Main01W.py
4) datasetAttrAutoDetect.py

Τα βήματα εκτέλεσης του FPGrowth frequent itemset mining
https://chatgpt.com/share/66f005dc-9a30-800b-b3d3-60500be509ae



EasyMiner 
https://br-dev.lmcloud.vse.cz/easyminercenter/
Not as easy as its name promises!

Δημήτρης Παυλίδης
6975808704
Γεώργιος Μουσίδης
6985980177
Ματθαίος Ζωγράφος AutoDtrees  github manthosjog 
6985981411



https://www.youtube.com/watch?v=6iLue3EFBWU
MySQL Shutdown Unexpectedly Fixed | MySQL not starting in XAMPP Server

1. Rename \xampp\mysql\data to Something else (e.g. data1)
2. Create a new file data in \xampp\mysql\
3. Copy all files ###EXCEPT file ibdata1 ### from \xampp\mysql\backup to data just created before 
4. Copy all files from the renamed file data (e.g. data1) to data but skip the copy of dublicate files when asked.
PESTO!!!