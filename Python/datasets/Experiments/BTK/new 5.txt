I have this structure in python: 
d1={
	('d',): (('b',), 5), (('k',), 4)
	('b',): (('k',), 4),
	('k',): (),
	('a',): (),
	('c',): ()
}

How to check if ('k',) is in d1[('d',)]?

0 = (('d',), 6)
1 = (('b',), 5)
2 = (('k',), 4)
3 = (('a',), 3)
4 = (('c',), 2)

How to implement something like:
for i=1 to (

{
6: [('d',)], 
5: [('b',)], 
4: [('k',), ('d', 'b')], 
3: [('a',)], 
2: [('c',), ('d', 'a'), ('b', 'k'), ('b', 'a')], 
1: [('b', 'c'), ('k', 'a'), ('a', 'c'), ('d', 'b', 'a'), ('d', 'k', 'a')]})

{
6: [('d',)], 
5: [('b',)], 
4: [('k',), ('d', 'b'), ('d', 'k')], 
3: [('a',)], 
2: [('c',), ('d', 'a'), ('d', 'c'), ('b', 'k'), ('b', 'a'), ('k', 'c'), ('d', 'b', 'k'), ('d', 'k', 'c')], 
1: [('b', 'c'), ('k', 'a'), ('a', 'c'), ('d', 'b', 'a'), ('d', 'k', 'a'), ('d', 'b', 'c'), ('d', 'a', 'c'), ('b', 'k', 'c'), ('k', 'a', 'c'), ('d', 'b', 'k', 'c'), ('d', 'k', 'a', 'c')]})

self.subsume
{


}


('k',): [(('d',), 4)], 
('d', 'k'), [[1]]

('c',): [(('k',), 2), (('d',), 4)], 
('k', 'c'), ('d', 'c'), ('d', 'k', 'c') [[3]]

('b', 'k'): [(('d',), 4)], 
('d', 'b', 'k'), [[1]]

('b', 'c'): [(('k',), 2), (('d',), 4)], 
('b', 'k', 'c'), ('d', 'b', 'c'), ('d', 'b', 'k', 'c') [[3]]

('a', 'c'): [(('k',), 2), (('d',), 4)]
('k', 'a', 'c'), ('d', 'a', 'c'), ('d', 'k', 'a', 'c') [[3]]


('d', 'k'), 
('d', 'c'),('k', 'c'), ('d', 'b', 'k'), ('d', 'k', 'c')
('d', 'b', 'c'), ('d', 'a', 'c'), ('b', 'k', 'c'), ('k', 'a', 'c'), ('d', 'b', 'k', 'c'), ('d', 'k', 'a', 'c')